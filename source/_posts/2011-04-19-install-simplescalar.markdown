---
layout: post
title: "Install SimpleScalar on Ubuntu 10.10 with Gcc-4.4"
date: 2011-04-19 18:36:02 +0800
comments: true
categories: 
---

The project 1 of computer architecture is based on *SimplesSalar3.0*, and it is recommended to finished this project on *Redhat 9*, otherwise there would be some version problems. But I am used to writing code in my ubuntu and do not wanna reset up my whole development environment on *Redhat*. BTW, installing a new system is rather troublesome even on vm, I decided to install *SimplesSalar* on my ubuntu(it turns out to be much more troublesome than installing a new one…)


### 1
You need flex and bison to install these things

``` bash
$ sudo apt-get install bison flex
```

### 2
I was given the following packages:

	simplesim-3v0d.gz
	simpletools-2v0.gz
	simpleutils-2v0.gz

also you could these packages from [here](http://www.simplescalar.com/tools.html)

### 3
Set up some installation variables

``` bash
$ export HOST=i386-unknown-linux
$ export TARGET=sslittle-na-sstrix
$ export IDIR=/home/yourname/simplescalar # path u wanna install simplescalar in
```

I also place the source packages in *$IDIR*

### 4
Extract source files

``` bash
$ tar xvzf simplesim-3v0d.gz
$ tar xvzf simpletools-2v0.gz
$ tar xvzf simpleutils-2v0.gz
```

and u will get the following folders:
*binutils-2.5.2*, *f2c-1994.09.27*, *gcc-2.6.3*, *glibc-1.09*, *simplesim-3.0*, *ssbig-na-sstrix*, *sslittle-na-sstrix*

### 5
Because the source code of simple code is out of date, we need to do some modifications on it

-   **binutils-2.5.2/libiberty/functions.def**</br>
	Line: 36 </br>
	Action: comment out</br></br>
	Line: 56</br>
	Action: comment out

-	**binutils-2.5.2/ld/ldlex.l**</br>
	Line: 476</br>
	Action: change *yy_current_buffer* to *YY_CURRENT_BUFFER*</br>

-	**binutils-2.5.2/ld/ldmisc.c**</br>
	Line: 24</br>
	Action: change *varargs.h* to *stdarg.h*</br></br>
	Line: 343 356 388 400</br>
	Action: change all four functions *info_msg()*, *einfo()*, *minfo()*, *finfo()* like this:</br>
``` c
343 void info_msg(const char* fmt, va_list ap)
344 //va_dcl
345 {
346     char *fmt;
347     va_list arg;
348     /* va_start(arg);
349     fmt = va_arg(arg, char *);
350     vfinfo(stdout, fmt, arg);
351     va_end(arg); */
352 }
```

-	**gcc-2.6.3/cccp.c**</br>
	Line: 194</br>
	Action: comment out</br>
-	**gcc-2.6.3/cp/g++.c**</br>
	Line: 90</br>
	Action: comment out</br>
-	**gcc-2.6.3/sdbout.c**</br>
	Line: 56</br>
	Action: replace the whole line with ”#if 0”</br>
-	**gcc-2.6.3/gcc.c**</br>
	Line: 172</br>
	Action: comment out</br>

### 6
Install *binutil* and *simplesim*, and there should be no error anymore…

``` bash
$ cd $IDIR/binutil-2.5.2
$ ./configure --host=$HOST --target=$TARGET --with-gnu-as --with-gnu-ld --prefix=$IDIR
$ make
$ make install
```

after which there should be a folder named *bin* in your *$IDIR* directory

``` bash
$ cd $IDIR/simplesim-3.0
$ make config-pisa
$ make
```

### 7
Build *gcc-2.6.3*, the most error-prone potion of all the work

``` bash
$ cd $IDIR/gcc-2.6.3
$ ./configure --host=$HOST --target=$TARGET --with-gnu-as --with-gnu-ld --prefix=$IDIR
$ make LANGUAGES=c
```

After this, you would receive an error that lies in *insn-output.c*, here, once again you need to modify the source file of *gcc-2.6.3*

-	**gcc-2.6.3/insn-output.c**</br>
	Line: 675 750 823</br>
	Action: and a ‘\’ to the end of the line, and it will be</br>

``` c
675 return "FIXME\n\
750 return "FIXME\n\
823 return "FIXME\n\
``` 

note that *insn-output.c* is generated by *flex* automatically, and your modification would be lost every time you make clean.

Now, finally the gcc was able to compiled with no errors, and there are two steps left:

``` bash
$ ../simplesim-3.0/sim-safe ./enquire -f >! float.h-cross
$ make install
```

### 8
Well, lets have a test on our *SimpleScalar*

``` bash
$IDIR/bin/sslittle-na-sstrix-gcc helloworld.c
$IDIR/simplesim-3.0/sim-safe a.out
```

and it would print out “Hello World!”

